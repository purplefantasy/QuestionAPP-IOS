//
//  ViewController.swift
//  Q&A
//
//  Created by User11 on 2018/11/28.
//  Copyright © 2018 pur. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        refresh()
    }
    var a:Bool = false
    var qnumber:Int = 0
    var qids:[Int] = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
    var sum: Int = 0
    var qID: Int = 0
    var q: [String] = ["甲乙丙丁四人喜歡的運動不同，而且每人都只做固定一種運動；已知，籃球場只休星期一，羽球場只休星期二，桌球場只休星期四，游泳池則休星期二四六；甲：『今天我要去運動，不然明天沒得去。』乙：『今明兩天我都會去運動。』丙：『今天我要去運動，前天我也有去。』丁：『從這個星期一到今天，我每天都有去運動。』請問，四人說話的這天是星期幾？", "誠實村有五間不同顏色的房子併排在一起，屋主們正在對面的涼亭內聊天。房子顏色：紅、綠、藍、黃、白（未照實際順序排）涼亭裡的人：A、B、C、D、E、F。其中有一個是從說謊村來作客的。誠實村的人永遠說實話，說謊村的人永遠說謊話，下面是他們的聊天內容：A：「我住在紅色房子。」B：「我住在最右邊的房子。」C：「我住在Ａ與Ｆ的房子隔壁。」D：「我住的房子與藍色房子之間相隔兩間房子。」E：「我住的房子隔壁沒有暖色系(紅、黃)房子。」F：「我住的房子被夾在Ｄ的房子跟白色房子中間。」請問，誰是說謊村來的？", "ABCD是同一棟四層樓公寓的住戶，每個人住在不同樓層，他們每個人都說了兩句話來描述自己住的樓層：A說：(1)『我不住在一樓』(2)『我住在 B 的下一層』B說：(3)『我不住在二樓』(4)『我住在 C 的下一層』C說：(5)『我不住在三樓』(6)『我住在 D 的下一層』D說：(7)『我不住在四樓』(8)『我住在 A 的下一層』但是其中只有兩句是實話，而且一樓的住戶至少有說一句實話，請問，A住在幾樓呢", "一位富翁在自家被殺害，當天只有四個人去過富翁家，而且都是獨自去的，沒有人能幫他們洗清嫌疑，於是警方傳訊了這四個嫌疑人。這四人各自做了兩句供詞，如下：Ａ：『我們四人都不是殺害富翁的兇手。』『我離開富翁家的時候他還活著。』Ｂ：『我是第二個到富翁家的。』『我到富翁家的時候他已經死了。』Ｃ：『我是第三個到富翁家的。』『我離開富翁家的時候他還活著。』Ｄ：『兇手不是在我去富翁家之後離開的。』『我到富翁家的時候他已經死了。』最後發現其實四人說的每一句都是謊話，你知道到底是誰殺害了富翁嗎？",          "有兩位女士，小美和小可，還有兩位先生，小名和小一；他們四人都是運動員，其中一位是游泳選手、一位是滑冰選手、一位是體操選手、一位是網球選手。有一天，他們圍著一張方桌而坐：游泳選手坐在小美的左邊。體操選手坐在小名的對面。小可和小一相鄰而坐。有一位女士坐在滑冰選手的左邊。請問，誰是網球選手呢？", "三個邏輯學家進入了一間學校，校長問：『你們都要上課嗎？』三人依序回答...A：『不知道...』B：『不知道...』C：『不知道...』D：『不知道...』請問A、B、C、D中，誰一定是冒牌貨？", "A、B、C、D、E、F六人國籍不同，分別為美國、德國、英國、法國、俄羅斯、義大利；(順序沒有對應)已知：A和美國籍是醫生  E和俄國籍是教師 C和德國籍是技師  B和F曾經當過兵，而德國籍沒當過兵  法國籍比A年齡大，義大利比C年齡大  B和美國籍下週要到英國旅行一週，C和法國籍下週要去俄羅斯渡假一週  試問：E為哪國人？", "一天晚上，趙先生和趙太太邀請錢先生、錢太太、孫先生、孫太太到家裡吃飯，飯後他們便一起打牌聊天。一聊之下，發現其中有一位最近中了彩券，樂不可支。從他們當晚的互動，已知以下內容：中獎者的配偶在當晚打牌輸了。趙先生有心臟疾病，不能劇烈運動。錢太太當晚和另一位太太聊得起勁，都沒有一起打牌。錢先生和孫太太當晚初次見面才認識的。趙先生打牌贏了，趙太太卻打輸了。錢先生上週才和中獎者一起參加馬拉松比賽。請問，那位幸運的中獎者是誰", "一位旅行者要橫跨沙漠，途中完全沒有綠洲，但每隔一段距離設有補給站可補充物資，從起點走到第一個補給站需要八天的時間，但一個人的體力只能搬運一個人喝六天份的水，旅行者心想：『自己一個人可以攜帶的水量一定不夠用，看來得雇助手幫忙了。』請問，旅行者至少要雇用多少個助手，才能讓自己順利走到第一個補給站呢？（註：助手每天要喝及能搬運的水量都跟旅行者一樣；不可以把助手拋棄在途中，讓他在沙漠裡渴死）", "在某個寒冷的冬天，想倒一杯熱水喝。我把剛燒好的熱開水倒進杯子裡，結果倒到200c.c.的時候馬克杯開始出現裂縫並且漏水，每一分鐘會從裂縫漏2c.c.。15分鐘後我進行緊急處理，後來補救後變成1分鐘漏1c.c.的水。請問就這樣沒有喝掉，過了一小時後杯子裡還有幾c.c.的熱水？", "小金獨自走在往克勒茲的小路上，迎面走來一個抓著兩條鍊子的男人，他的每條鍊子上繫著一隻大狗，每隻大狗身後跟著兩隻小狗，每隻小狗身上繫著兩個鈴鐺，每個鈴鐺上面有兩隻跳蚤，請問，總共有多少生物要到克勒茲去？", "金先生跟金太太有三個兒子，每個兒子都有一個老婆、一個兒子、一個妹妹，請問這個大家庭有多少人？", "海上有一艘船，船旁附著的梯子有六階，每階間隔20公分，海水水面恰好在梯子最底階下30公分處；但當時正逢漲潮，海平面每10分鐘會升高15公分，而且再一小時後海水就會升到最高的位置，請問，當海水升到最高位置時，有多少階梯子會淹沒在海水之下？", "有一艘搭載了15個人的船，因為撞到了礁石，再過20分鐘就會完全沉沒；船上只有一艘可以坐5個人的救生艇，用救生艇往返最近的陸地需要9分鐘，請問最多可以有多少人搭救生艇獲救？", "寒流來了，等車的人都把手插進口袋裡禦寒...兩手都插進口袋的人有5個，只把左手插進口袋的人有2個，把一手插進口袋裡的有4人。請問：總共有幾個人在等公車？", "腦力補給辦公室門口貼著一張公告：『不懂邏輯的人不得進入』有一天，來了一群要面試當腦力小編的人，他們都是懂邏輯的人，請問，下列哪一(幾)項一定是對的： (A) 面試者都會被允許進入辦公室 (B) 面試者都不會被允許進入辦公室 (C) 面試者可能不會被允許進入辦公室 (D) 面試者看到公告之後都會自動離開", "老師拿著圖卡，要小朋友們用英文念出圖卡上動物的英文名稱；老師拿出第一張圖卡，第一個小朋友說：『Cat』第二個小朋友說：『Dog』第三個小朋友說：『Cat』老師拿出第二張圖卡，第一個小朋友說：『Dog』第二個小朋友說：『Cat』第三個小朋友說：『Cat』老師笑著說，有人說對了一次，有人兩次都說對了，有人兩次都說錯了，請問，是誰只說對了一次呢？", "在一場學術討論會中，有四位學者參加，他們每人都只會講中／英／法／日四語言中的兩種，也沒有一種語言是大家都會的，但是他們四人仍可溝通；已知：只有一種語言有三個人都會說  Ａ學者會日語，Ｄ學者不會日語，但他們可以不透過翻譯自行對談  Ｂ學者不會英語，但Ａ與Ｃ學者對話時要請他翻譯  對Ｂ、Ｃ、Ｄ學者來說，沒有一種語言是三個人都會的  既懂日語又懂法語的人一個都沒有  請問，最多人會說的是哪一種語言？", "根據某一群人中實際統計出來的結果：１.有哥哥的人沒有弟弟２.沒有哥哥的人有妹妹３.沒有姐姐的人有弟弟或妹妹，那麼，以下哪個敘述是錯誤的呢？A.有弟弟的人就一定有妹妹B.沒有妹妹的人一定也沒有弟弟C.沒有弟弟的人一定有姐姐D.沒有妹妹的人一定有姐姐", "桌上有一排五個玻璃杯，分別裝著醬油、醋、濃鹽水、濃糖水、白開水，已知，醬油不在白開水和醋的旁邊，濃糖水不在濃鹽水跟醋的旁邊，濃鹽水不在醋跟白開水的旁邊，右邊數來第二個杯子是暗褐色的液體，其他都是透明的液體，請問，你能推理出哪個杯子裝著白開水嗎？", "一個小朋友在數自已左手的手指，從大拇指開始往小指數，到底了就反方向往大拇指數，到底了再反方向往小指數，就這樣一直數下去...請問，當這個小朋友數到200的時候，是數到哪一根手指頭呢？", "小楷、小治用吹蠟燭來比賽肺活量，兩人面前各有一排20根點燃的蠟燭，小楷每次吐氣花 1 秒，吸氣花 1 秒；小治每次吐氣花 2 秒，吸氣花 2 秒；兩人深吸一口氣準備好同時開始，每次吐氣都剛好吹熄一根蠟燭；請問，當小治吹熄20根蠟燭時，小楷已經吹熄幾根蠟燭了？", "小金住在一棟大樓裡，一天，他從自家陽台觀察自己住的這棟大樓，往下看，他看到了五個陽台，往上看，他看到了四個陽台，請問，小金家住幾樓呢？", "家中突然停電，因此點燃10根蠟燭照明，過了沒多久，有4根被吹滅；又一陣子之後，另3根被吹滅；之後就再沒蠟燭被吹滅過，請問，最後剩下幾根蠟燭？", "小金參加了一場學術研討會，除了小金之外共有50個人參加，請問，下面描述中哪項必定是正確的呢？ A.所有人和別人握手的次數和必為偶數 B.所有人和別人握手的次數和必為奇數 C.場內發生的握手次數和必為偶數 D.場內發生的握手次數和必為奇數", "小治和小楷正在家裡吃瓜子，桌上倒滿了許多瓜子。突然小楷提議：｢我們來玩個抓瓜子的遊戲吧！現在桌上我剛剛數過有100個瓜子，每人一次抓1~3個，輪流抓，抓到最後一個瓜子的人就輸了。｣小治問：｢那誰先抓？｣小楷：｢那就抽籤決定好了。｣抽籤結果由小治先抓，那麼小治第一次應該抓多少個瓜子才能獲勝呢？", "小楷、小治調皮被處罰，要把教師辦公室的整排玻璃窗擦乾淨，小楷先到了辦公室，開始從內側擦玻璃，擦完兩塊玻璃之後，小治也到了，小治接手繼續擦內側的玻璃，小楷則改到外側去擦；小治擦得比較快，把內側玻璃都擦完後，又到外側去幫小楷擦了4塊玻璃，就這樣所有玻璃窗的兩面都擦過一遍了；請問，小治比小楷多擦了幾塊玻璃呢？", "小楷、小治在玩撲克牌，約定每局輸的要給贏的10元，結果，小楷贏了5局，小治贏了30元，請問，他們總共玩了幾局呢？", "設 a = 1 x 2 x 3 x 4 x 5 x ... x 98 x 99 x 100（等同 a = 100!)試問：a 這個數字的末尾總共有多少個連續的0？", "小金去美國玩，租了一輛六輪的露營車想要環遊美國，整趟旅程預計要走11.5萬公里，非常遙遠，而每顆輪胎的壽命只能行走1.5萬公里，請問，至少要用多少顆輪胎才能完成小金的整趟旅程呢？"]
    var ans1: [String] = ["星期二", "A", "一樓", "A", "小美", "A", "美國", "趙先生", "1", "0cc", "1", "12", "0", "9", "6", "A", "第一個小朋友", " 中文", "A", "1", "拇指", "5", "5", "3", "A", "沒法獲勝", "2", "3", "11", "8"]
    var ans2: [String] = ["星期三", "B", "二樓", "B", "小可", "B", "英國", "錢太太", "2", "110cc", "15", "14", "1", "10", "7", "B", "第二個小朋友", "英文", "B", "2", "食指", "10", "6",  "6", "B", "1", "4", "5", "12", "28"]
    var ans3: [String] = ["星期四", "C", "三樓", "C", "小名", "C", "法國", "孫先生", "3", "125cc", "19", "24", "2", "13", "9", "C", "第三個小朋友", "法文", "C", "3", "中指", "20", "7",  "7","C", "2", "6", "8", "20", "42"]
    var ans4: [String] = ["星期五", "D", "四樓", "D", "小一", "D", "義大利", "孫太太", "4", "200cc", "23", "26", "3", "15", "11", "D", "都不是", "日文", "D", "5", "無名指", "40", "10",  "10", "D","3", "8", "13", "24", "46"]
    var ans: [Int] = [2, 3, 3, 1, 1, 4, 3, 2, 1, 1, 1, 1, 3, 3, 1, 3, 3, 1, 3, 2, 2, 3, 3, 3, 1, 4, 2, 4, 4, 4]
    
    @IBAction func a1(_ sender: UIButton) {
        if ans[qID] == 1 {
            sum+=10
        }
    }
    
    @IBAction func a2(_ sender: UIButton) {
        if ans[qID] == 2 {
            sum+=10
        }
    }
    
    @IBAction func a3(_ sender: UIButton) {
        if ans[qID] == 3 {
            sum+=10
        }
    }
    
    @IBAction func a4(_ sender: UIButton) {
        if ans[qID] == 4 {
            sum+=10
        }
    }
    
    @IBAction func changeQ(_ sender: UIButton) {
        if(qnumber==10) {
            let alert = UIAlertController(title: "遊戲結束", message: "你的分數："+String(sum)+"分", preferredStyle: .alert)
            alert.addAction(UIAlertAction(title: "再玩一次", style: .default, handler: nil))
            self.present(alert, animated: true, completion: nil)
            qids = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
            qnumber=0
            sum=0
        }
        refresh()
    }
    
    func refresh() {
        var ran:Int
        ran = Int(arc4random() % 29)+1
        qID = ran
        a = false
        if(qnumber>0){
            for var i:Int in 0...qnumber-1{
                if qID == qids[i] {
                    a=true
                }
            }
        }
        while a {
            ran = Int(arc4random() % 29)+1
            qID = ran
            a = false
            if(qnumber>0){
                for var i:Int in 0...qnumber-1{
                    if qID == qids[i] {
                        a=true
                    }
                }
            }
        }
        quest.text = q[qID]
        a1.setTitle(ans1[qID], for: .normal)
        a2.setTitle(ans2[qID], for: .normal)
        a3.setTitle(ans3[qID], for: .normal)
        a4.setTitle(ans4[qID], for: .normal)
        sumout.text="分數：" + String(sum)
        qn.text="第"+String(qnumber+1)+"題"
        qids[qnumber]=qID
        qnumber=qnumber+1
    }
    
    
    @IBOutlet weak var qn: UILabel!
    @IBOutlet weak var quest: UILabel!
    @IBOutlet weak var a1: UIButton!
    @IBOutlet weak var a2: UIButton!
    @IBOutlet weak var a3: UIButton!
    @IBOutlet weak var a4: UIButton!
    @IBOutlet weak var sumout: UILabel!
    
}

